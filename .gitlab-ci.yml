image: registry.gitlab.com/cloudigrade/images/test-container

stages:
  - Deploy Images
  - Test Integrade
  - Deploy Master
  - Test Cloudigrade API
  - Test Cloudigrade Inspection
  - Test Cloudigrade UI
  - Teardown Cloudigrade
  - Cleanup

#####################################################################
# Shared definitions.

.archive_results: &archive_results
  artifacts:
    when: always
    reports:
      junit: "${REPORT_NAME}.xml"
    name: "${REPORT_NAME}"
    paths:
      - "${REPORT_NAME}.xml"
      - "${REPORT_NAME}-api.log"
      - "${REPORT_NAME}-celery-worker.log"
      - "${REPORT_NAME}-celery-beat.log"

.before_script: &before_script
  before_script:
    - python --version
    - oc version
    - make install-dev
    - oc login ${OPENSHIFT_URL} --token ${GITLAB_CI_SA_TOKEN}
    - oc project ${OPENSHIFT_PROJECT}
    - export USE_HTTPS=true
    - cp aws_image_config_template.yaml integrade/aws_image_config.yaml

.api_all: &api_all
  script:
    - py.test -s --junitxml="${REPORT_NAME}.xml" -vvv --force-flaky -m 'not inspection' integrade/tests/api

.inspect: &inspect
  script:
    - cp aws_image_config_template.yaml integrade/aws_image_config.yaml
    - py.test --junitxml="${REPORT_NAME}.xml" -vvv -m 'inspection' integrade/tests/api
  after_script:
    - python scripts/aws_reaper.py --env-cloudtrail-only

.master_variables: &master_variables
  CLOUDTRAIL_PREFIX: review-master-integrade-
  AWS_S3_BUCKET_NAME: review-master-integrade-cloudigrade-s3
  AWS_QUEUE_PREFIX: review-master-integrade-
  CLOUDIGRADE_BASE_URL: review-master-integrade.5a9f.insights-dev.openshiftapps.com
  OPENSHIFT_PREFIX: c-review-master-integrade-
  BRANCH_NAME: master

.branch_variables:  &branch_variables
  CLOUDTRAIL_PREFIX: review-${CI_COMMIT_REF_SLUG}-
  AWS_S3_BUCKET_NAME: ${CI_COMMIT_REF_SLUG}-cloudigrade-s3
  AWS_QUEUE_PREFIX: review-${CI_COMMIT_REF_SLUG}-
  BRANCH_NAME: ${CI_COMMIT_REF_SLUG}

.ui_scripts: &ui_scripts
  script:
    - py.test --junitxml="${REPORT_NAME}.xml" -vvv integrade/tests/ui ${EXTRA_PYTEST_ARGS}

#####################################################################
# Deploy images every morning so we have some inspections to look at
# Commented out until later date at which point this may become relavent again.
# CloudMeter development is going into deep freeze.

# Deploy Images:
#   stage: Deploy Images
#   tags:
#     - shared
#   only:
#     refs:
#       - schedules
#     variables:
#       - $ONLY_DEPLOY_IMAGES == "true"
#   before_script:
#     - python --version
#     - make install-dev
#     - pip install codecov
#     - cp aws_image_config_template.yaml integrade/aws_image_config.yaml
#   script:
#     - python scripts/aws_instigator.py
#   coverage: '/\d+\%\s*$/'

#####################################################################
# Test integrade's own code.

Test Integrade:
  stage: Test Integrade
  tags:
    - shared
  except:
    refs:
      - schedules
  before_script:
    - python --version
    - make install-dev
    - pip install codecov
  script:
    - cp aws_image_config_template.yaml integrade/aws_image_config.yaml
    - make lint
    - make test-coverage
    - codecov
  coverage: '/\d+\%\s*$/'

#####################################################################
# Jobs that run ONLY on branches.
# These should do the same thing as the jobs for master, but these
# have different environment variables and some are manual because
# they may be slow. These also require someone else to set up branch
# review environments for cloudigrade and frontigrade BEFORE these
# jobs run.

API (automatic):
  stage: Test Cloudigrade API
  tags:
    - shared
  variables:
    <<: *branch_variables
  except:
    refs:
      - master
      - schedules
  allow_failure: true  # allow inspection or UI tests to run if API fails
  <<: *before_script
  <<: *api_all
  <<: *archive_results
  after_script:
    - python scripts/aws_reaper.py --env-cloudtrail-only

Inspection (manual):
  stage: Test Cloudigrade Inspection
  tags:
    - shared
  variables:
    <<: *branch_variables
  except:
    refs:
      - schedules
      - master
  when: manual
  allow_failure: true  # allows UI tests to run if inspection fails
  <<: *before_script
  <<: *archive_results
  <<: *inspect

UI Chrome (manual):
  stage: Test Cloudigrade UI
  tags:
    - shared
  except:
    - master
    - schedules
  when: manual
  <<: *before_script
  <<: *archive_results
  <<: *ui_scripts
  variables:
    <<: *branch_variables
    REPORT_NAME: ui_chrome
    UI_BROWSER: Chrome
    UI_USE_REMOTE: "true"
  services:
    - name: selenium/standalone-chrome
      alias: selenium

UI Firefox (manual):
  stage: Test Cloudigrade UI
  tags:
    - shared
  except:
    - master
    - schedules
  when: manual
  <<: *before_script
  <<: *archive_results
  <<: *ui_scripts
  variables:
    <<: *branch_variables
    REPORT_NAME: ui_firefox
    UI_BROWSER: Firefox
    UI_USE_REMOTE: "true"
  services:
    - name: selenium/standalone-firefox
      alias: selenium

UI Microsoft Edge (manual):
  stage: Test Cloudigrade UI
  tags:
    - shared
  except:
    - master
    - schedules
  when: manual
  <<: *before_script
  <<: *archive_results
  <<: *ui_scripts
  variables:
    <<: *branch_variables
    REPORT_NAME: ui_edge
    UI_BROWSER: MicrosoftEdge

#####################################################################
# Deploy review environments for master jobs only.
# These tests require a custom "master" review environment because
# they cannot run against our test and stage environments.

Deploy Master Cloudigrade:
  stage: Deploy Master
  tags:
    - shared
  image: registry.gitlab.com/finestructure/pipeline-trigger
  only:
    refs:
      - master
      - schedules
  except:
    variables:
      - $ONLY_DEPLOY_IMAGES == "true"
  variables:
    PROJECT_ID: 7449616
    TARGET_BRANCH: master
    DEPLOYMENT_NAME: integrade
  script:
    - >
      trigger -a ${API_TOKEN} -p ${CLOUDIGRADE_PIPELINE_TOKEN}
      -t ${TARGET_BRANCH} -e CHAT_INPUT=${DEPLOYMENT_NAME} ${PROJECT_ID}

# Deploy Master Frontigrade:
#   stage: Deploy Master
#   tags:
#     - shared
#   image: registry.gitlab.com/finestructure/pipeline-trigger
#   only:
#     - master
#     - schedules
#   variables:
#     PROJECT_ID: 7449617
#     TARGET_BRANCH: master
#     DEPLOYMENT_NAME: integrade
#   script:
#     - >
#       trigger -a ${API_TOKEN} -p ${FRONTIGRADE_PIPELINE_TOKEN}
#       -t ${TARGET_BRANCH} -e CHAT_INPUT=${DEPLOYMENT_NAME} ${PROJECT_ID}

#####################################################################
# Jobs that run on master upon commits and on schedule.
# These should run ALL tests automatically. The content of the tests
# is the same as when run in a branch, but all "manual" branch jobs
# are now automatic.

API:
  stage: Test Cloudigrade API
  tags:
    - shared
  only:
    refs:
      - master
      - schedules
  except:
    variables:
      - $ONLY_DEPLOY_IMAGES == "true"
  when: always
  <<: *before_script
  <<: *api_all
  <<: *archive_results
  variables:
    <<: *master_variables
    REPORT_NAME: api_all
  after_script:
    - python scripts/aws_reaper.py --env-cloudtrail-only

# Inspection:
#   stage: Test Cloudigrade Inspection
#   tags:
#     - shared
#   only:
#     - master
#     - schedules
#   <<: *before_script
#   <<: *archive_results
#   <<: *inspect
#   variables:
#     <<: *master_variables

# UI Chrome:
#   stage: Test Cloudigrade UI
#   tags:
#     - shared
#   only:
#     - master
#     - schedules
#   when: always
#   <<: *before_script
#   <<: *archive_results
#   <<: *ui_scripts
#   variables:
#     <<: *master_variables
#     REPORT_NAME: ui_chrome
#     UI_BROWSER: Chrome
#     UI_USE_REMOTE: "true"
#   services:
#     - name: selenium/standalone-chrome
#       alias: selenium

# UI Firefox:
#   stage: Test Cloudigrade UI
#   tags:
#     - shared
#   only:
#     - master
#     - schedules
#   when: always
#   <<: *before_script
#   <<: *archive_results
#   <<: *ui_scripts
#   variables:
#     <<: *master_variables
#     REPORT_NAME: ui_firefox
#     UI_BROWSER: Firefox
#     UI_USE_REMOTE: "true"
#   services:
#     - name: selenium/standalone-firefox
#       alias: selenium

# UI Microsoft Edge:
#   stage: Test Cloudigrade UI
#   tags:
#     - shared
#   only:
#     - master
#     - schedules
#   when: always
#   <<: *before_script
#   <<: *archive_results
#   <<: *ui_scripts
#   variables:
#     <<: *master_variables
#     REPORT_NAME: ui_edge
#     UI_BROWSER: MicrosoftEdge
#     EXTRA_PYTEST_ARGS: "-x --ff"

#####################################################################
# Clean up master review environments.

.stop_master_review: &stop_master_review
  stage: Teardown Cloudigrade
  tags:
    - shared
  only:
    refs:
      - master
      - schedules
  when: always
  except:
    variables:
      - $ONLY_DEPLOY_IMAGES == "true"
  script: >
    curl --request POST --header "${AUTH}"
    https://gitlab.com/api/v4/projects/${PROJECT_ID}/environments/$(
      curl --header "${AUTH}" https://gitlab.com/api/v4/projects/${PROJECT_ID}/environments |
      jq '.[] | (.name=="review/master-integrade") | .id'
    )/stop

Teardown Cloudigrade (Master):
  <<: *stop_master_review
  variables:
    GIT_STRATEGY: none
    PROJECT_ID: 7449616
    AUTH: "PRIVATE-TOKEN: ${API_TOKEN}"
  tags:
    - shared

Teardown Frontigrade (Master):
  <<: *stop_master_review
  variables:
    GIT_STRATEGY: none
    PROJECT_ID: 7449617
    AUTH: "PRIVATE-TOKEN: ${API_TOKEN}"
  tags:
    - shared

#####################################################################
# Clean up customer accounts at the end of each pipeline run.

Test Cleanup:
  stage: Cleanup
  tags:
    - shared
  <<: *before_script
  variables:
    <<: *master_variables
  except:
    variables:
      - $ONLY_DEPLOY_IMAGES == "true"
  script:
    - python scripts/aws_reaper.py --env-cloudtrail-only
  when: always

Nightly Cleanup:on-schedule:
  stage: Cleanup
  tags:
    - shared
  only:
    refs:
      - schedules
  except:
    variables:
      - $ONLY_DEPLOY_IMAGES == "true"
  # will only run on the scheduled pipeline,
  # 'always' in this context means it will run
  # even if prior stages fail
  when: always
  before_script:
    - python --version
    - oc version
    - make install-dev
  script:
    - python scripts/aws_reaper.py --all-integrade-cloudtrails
