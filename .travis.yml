cache: pip
language: python
sudo: false
python:
  - '3.6'

stages:
  - test-integrade
  - name: setup-cloudigrade
    if: branch = master or (branch != master and type = pull_request)
  - name: test-cloudigrade
    if: branch = master or (branch != master and type = pull_request)

jobs:
  include:
    - stage: test-integrade
      install:
        - make install-dev
        - pip install codecov
      script:
        - make lint
        - make test-coverage
      after_success:
        - codecov

    - stage: setup-cloudigrade
      install:
        - ./scripts/setup_oc.sh
        - export PATH="${HOME}/oc:${PATH}"
        - oc version
      script:
        - oc login $OPENSHIFT_URL --token=$OPENSHIFT_TOKEN
        - oc rollout status dc/postgresql
        - REVISION=$(oc rollout latest dc/postgresql -o revision)
        - oc rollout status dc/postgresql --revision=$REVISION
        - oc rollout status dc/cloudigrade-api
        - REVISION=$(oc rollout latest dc/cloudigrade-api -o revision)
        - oc rollout status dc/cloudigrade-api --revision=$REVISION
        - oc rsh -c cloudigrade-api $(oc get pods -o jsonpath='{.items[*].metadata.name}' -l name=cloudigrade-api) scl enable rh-postgresql96 rh-python36 -- python manage.py createsuperuser --no-input --username $CLOUDIGRADE_USER --email="$CLOUDIGRADE_USER@example.com"

    - stage: test-cloudigrade
      env:
        - NAME=api
      install:
        - ./scripts/setup_oc.sh
        - export PATH="${HOME}/oc:${PATH}"
        - oc version
        - make install-dev
      before_script:
        - oc login $OPENSHIFT_URL --token=$OPENSHIFT_TOKEN
        - export CLOUDIGRADE_TOKEN=$(oc rsh -c cloudigrade-api $(oc get pods -o jsonpath='{.items[*].metadata.name}' -l name=cloudigrade-api) scl enable rh-postgresql96 rh-python36 -- python manage.py drf_create_token $CLOUDIGRADE_USER | awk '{print $3}')
      script:
        - py.test -vvv integrade/tests/api

    - stage: test-cloudigrade
      env:
        - NAME=ui-chrome
      addons:
        chrome: stable
      before_install:
        - ./scripts/setup_chromedriver.sh
        - export PATH="${HOME}/chromedriver:${PATH}"
        - chromedriver --version
      install:
        - ./scripts/setup_oc.sh
        - export PATH="${HOME}/oc:${PATH}"
        - make install-dev
      before_script:
        - oc login $OPENSHIFT_URL --token=$OPENSHIFT_TOKEN
        - export CLOUDIGRADE_TOKEN=$(oc rsh -c cloudigrade-api $(oc get pods -o jsonpath='{.items[*].metadata.name}' -l name=cloudigrade-api) scl enable rh-postgresql96 rh-python36 -- python manage.py drf_create_token $CLOUDIGRADE_USER | awk '{print $3}')
      script:
        - xvfb-run py.test -vvv --driver Chrome integrade/tests/ui

    - stage: test-cloudigrade
      env:
        - NAME=ui-firefox
      addons:
        firefox: latest
      before_install:
        - ./scripts/setup_geckodriver.sh
        - export PATH="${HOME}/geckodriver:${PATH}"
        - geckodriver --version
      install:
        - ./scripts/setup_oc.sh
        - export PATH="${HOME}/oc:${PATH}"
        - make install-dev
      before_script:
        - oc login $OPENSHIFT_URL --token=$OPENSHIFT_TOKEN
        - export CLOUDIGRADE_TOKEN=$(oc rsh -c cloudigrade-api $(oc get pods -o jsonpath='{.items[*].metadata.name}' -l name=cloudigrade-api) scl enable rh-postgresql96 rh-python36 -- python manage.py drf_create_token $CLOUDIGRADE_USER | awk '{print $3}')
      script:
        - xvfb-run py.test -vvv --driver Firefox integrade/tests/ui
